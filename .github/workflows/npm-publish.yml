name: Publish to NPM

on:
  push:
    branches: [ main ]
    # Only trigger if package.json version changed (prevents infinite loops)
    paths:
      - 'package.json'
  # Also trigger on tag pushes
  create:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    # Add permissions for GitHub releases
    permissions:
      contents: write
      packages: write
    
    # Only run if the commit message includes version info, package.json changed, or it's a version tag
    if: contains(github.event.head_commit.message, 'version') || contains(github.event.head_commit.message, '.') || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests (if any)
        run: npm test --if-present
        
      - name: Check if version changed
        id: version-check
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on NPM
          if npm view git-changelog-manager@$CURRENT_VERSION version 2>/dev/null; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists on NPM"
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION is new, will publish"
          fi
          
      - name: Wait before publish (avoid conflicts)
        if: steps.version-check.outputs.version_exists == 'false'
        run: sleep 30
        
      - name: Publish to NPM with retry
        if: steps.version-check.outputs.version_exists == 'false'
        run: |
          for i in {1..3}; do
            echo "Attempt $i to publish to NPM..."
            if npm publish; then
              echo "‚úÖ Successfully published to NPM"
              break
            else
              echo "‚ùå Publish attempt $i failed"
              if [ $i -lt 3 ]; then
                echo "Waiting 60 seconds before retry..."
                sleep 60
              else
                echo "All publish attempts failed"
                exit 1
              fi
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        if: steps.version-check.outputs.version_exists == 'false'
        run: |
          gh release create v${{ steps.version-check.outputs.current_version }} \
            --title "Release v${{ steps.version-check.outputs.current_version }}" \
            --notes "üöÄ **Automated Release v${{ steps.version-check.outputs.current_version }}**
            
            This release was automatically created and published to NPM.
            
            ### Changes
            - See commit history for detailed changes
            
            ### Installation
            \`\`\`bash
            npm install git-changelog-manager@${{ steps.version-check.outputs.current_version }}
            \`\`\`"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Notify success
        if: success()
        run: |
          echo "‚úÖ Successfully published git-changelog-manager@${{ steps.version-check.outputs.current_version }} to NPM"
          echo "üì¶ Package is now available at: https://www.npmjs.com/package/git-changelog-manager"
